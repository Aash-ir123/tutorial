module Data_Memory(clk, reset, MemRead, MemWrite, Address, Write_data, Read_data);
input clk, reset, MemRead, MemWrite; // single bit inputs (Memread/MemWrite are control signals, is they are 1, memory is read/written)
input [31:0] Address, Write_data;
output [31:0] Read_data;

// making data memory
reg [31:0] data_memory[63:0];	// The memory has 64 locations (or addresses)and each location can store a 32-bit value
integer k;
assign Read_data = (MemRead) ? data_memory[Address] : 32'h00000000; // if MemRead is 1, data_memory[Address] is assigned to Read_data and if MemRead is 0, 32'h0 is assigned

always @ (posedge clk)
begin
if (reset==1'b1)
for (k = 0; k < 64; k = k + 1)
begin
data_memory[k] = 32'h00000000;	// reset data_memory to Zero
end
end
else 
if  (MemWrite) data_memory[Address] = Write_data
end
endmodule
